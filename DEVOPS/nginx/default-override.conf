   
   #127.0.0.11 docker dns
   resolver 127.0.0.11 ipv6=on;

   map $http_upgrade $connection_upgrade {
   	default upgrade;
   	''      close;
   }
   
   upstream image_compressor_us {
   	server image_compressor:3000 fail_timeout=0;
   }
   	proxy_set_header Host $host;
   	proxy_set_header X-Real-IP $remote_addr;
   	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	
    server {
   	    listen 9080 default_server;
   	    #listen [::]:80 default_server;
   	    server_name _;
   	    #return 301 https://$host$request_uri;

		
   	location / {
   		proxy_pass   http://image_compressor_us;
   	}
    }
   
   server { # simple reverse-proxy
   	listen       443 ssl default_server;
   	#listen [::]:443 ssl default_server;

   	ssl_certificate      /etc/nginx/cert/sslCert.crt;
   	ssl_certificate_key  /etc/nginx/cert/sslPvtKey.key;
   	ssl_protocols       TLSv1.1 TLSv1.2 TLSv1.3;

   	ssl_session_cache    shared:SSL:5m;
   	ssl_session_timeout  5m;
   	
   	proxy_buffers         8 16k;  # Buffer pool = 8 buffers of 16k
   	proxy_buffer_size     16k;    # 16k of buffers from pool used for headers
   	
   	#Useful for nexus upload build
   	client_max_body_size 2500M;
   	
   	ssl_ciphers  HIGH:!aNULL:!MD5;
   	ssl_prefer_server_ciphers  on;

   	proxy_read_timeout 86400s;
   	proxy_send_timeout 86400s;
   	
   	set $session_storage cookie;
   	
   	#rewrite ^/prediction/(.*)$ /$1 break;
	   	
   	# default location
   	#proxy_set_header X-Forwarded-Port  $requested_port;
   	#proxy_set_header X-Forwarded-Server $host; 
	
   	proxy_set_header X-Forwarded-Proto https;
		
   	location / {
   		proxy_pass   http://image_compressor_us;
   	}

   }
